// XXX: import js from '@eslint/js';

export default [
  // XXX: js.configs.all,
  {
    name: 'testy-base',
    languageOptions: {
      ecmaVersion: 'latest',
      sourceType: 'module',
    },
    ignores: [
      'reports/**/*.mjs',
      'reports/**/*.cjs',
      'reports/**/*.js',
      'doc/**/*.mjs',
      'doc/**/*.cjs',
      'doc/**/*.js',
    ],
    rules: {
      'sort-keys': 'off',
      'no-throw-literal': 'error',
      'no-ternary': 'off',
      'no-undef': 'error',
      'no-await-in-loop': 'error',
      'func-style': 'off',
      'no-empty-function': 'error',
      strict: 'error',
      'capitalized-comments': 'off',
      camelcase: 'error',
      complexity: ['error', 5],

      'array-callback-return': 'error',
      'arrow-body-style': 'error',
      'arrow-parens': ['error', 'as-needed'],
      'arrow-spacing': 'error',
      'block-scoped-var': 'error',
      'block-spacing': 'error',
      'brace-style': 'error',
      'class-methods-use-this': 'off',
      'comma-dangle': ['error', 'always-multiline'],
      'comma-spacing': 'error',
      'comma-style': 'error',
      'constructor-super': 'error',
      curly: 'error',
      'default-param-last': 'error',
      'dot-location': ['error', 'property'],
      'dot-notation': 'error',
      'eol-last': 'error',
      eqeqeq: 'error',
      'for-direction': 'error',
      'func-call-spacing': 'error',
      'getter-return': 'error',
      'id-length': 'error',
      'implicit-arrow-linebreak': 'off',
      indent: ['error', 2],
      'keyword-spacing': 'error',
      'new-cap': 'error',
      'new-parens': 'error',
      'no-array-constructor': 'error',
      'no-async-promise-executor': 'error',
      'no-class-assign': 'error',
      'no-compare-neg-zero': 'error',
      'no-cond-assign': 'error',
      'no-confusing-arrow': 'off',
      'no-const-assign': 'error',
      'no-constant-binary-expression': 'error',
      'no-dupe-class-members': 'error',
      'no-duplicate-imports': 'error',
      'no-eval': 'error',
      'no-ex-assign': 'error',
      'no-extend-native': 'error',
      'no-iterator': 'error',
      'no-loop-func': 'error',
      'no-magic-numbers': 'off',
      'no-multi-assign': 'error',
      'no-multi-spaces': 'error',
      'no-multiple-empty-lines': 'error',
      'no-new-func': 'error',
      'no-new-object': 'error',
      'no-param-reassign': 'error',
      'no-plusplus': 'error',
      'no-restricted-syntax': [
        'error',
        {
          message: 'for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.',
          selector: 'ForInStatement',
        },
        {
          message: 'iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations.',
          selector: 'ForOfStatement',
        },
        {
          message: 'Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.',
          selector: 'LabeledStatement',
        },
        {
          message: '`with` is disallowed in strict mode because it makes code impossible to predict and optimize.',
          selector: 'WithStatement',
        },
      ],
      'no-undefined': 'off',
      'no-underscore-dangle': ['error', { allowAfterThis: true }],
      'no-unused-private-class-members': 'error',
      'no-unused-vars': ['error', { argsIgnorePattern: '^_' }],
      'no-use-before-define': 'off',
      'no-useless-call': 'error',
      'no-useless-constructor': 'error',
      'no-useless-escape': 'error',
      'no-useless-rename': 'error',
      'no-var': 'error',
      'no-void': 'error',
      'no-with': 'error',
      'object-curly-newline': 'error',
      'object-curly-spacing': ['error', 'always'],
      'object-shorthand': 'error',
      'one-var': 'off',
      'prefer-arrow-callback': 'error',
      'prefer-const': 'error',
      'prefer-destructuring': 'error',
      'prefer-object-spread': 'error',
      'prefer-rest-params': 'error',
      'prefer-spread': 'error',
      'prefer-template': 'error',
      'quote-props': ['error', 'as-needed'],
      quotes: ['error', 'single', 'avoid-escape'],
      'require-unicode-regexp': 'off',
      semi: 'error',
      'sort-imports': 'off',
      'sort-vars': 'off',
      'space-before-function-paren': ['error', 'never'],
      'space-in-parens': 'error',
      'space-infix-ops': 'error',
      'template-curly-spacing': ['error', 'never'],
    },
  },
  {
    name: 'testy-lib',
    files: [
      'lib/**/*.js',
      'bin/**/*.js',
    ],
    rules: {
      'max-statements': 'error',
      'max-lines-per-function': 'error',
    },
  },
  {
    name: 'testy-tests',
    files: [
      'tests/**/*.js',
    ],
    rules: {
      'init-declarations': 'off',
      'no-throw-literal': 'off',
      'no-empty-function': 'off',
    },
  },
];
